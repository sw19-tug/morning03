apply plugin: 'com.android.application'
apply plugin: 'checkstyle'
check.dependsOn('checkstyle')

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "sw19.moring03.paint"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:28.0.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.25.1'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    checkstyle 'com.puppycrawl.tools:checkstyle:8.2'
}

task checkstyle(type: Checkstyle) {
    group = 'Code Quality'

    ignoreFailures true
    showViolations true

    source '.'
    include '**/*.java', '**/*.xml', '**/*.gradle'
    exclude '**/gen/**', '**/build/**', 'libraryProjects/**', '**/.idea/**'

    classpath = files()

    reports {
        xml.enabled = true
        xml.destination "build/reports/checkstyle.xml"
    }
}

checkstyle {
    toolVersion = "8.2"
    configFile = rootProject.file('app/config/checkstyle.xml')
}